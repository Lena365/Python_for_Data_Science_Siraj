import tweepyfrom textblob import TextBlobimport numpy as npimport csvconsumer_key = 'sVgDpjhKsv4kSUCMVt8YF1oo0'consumer_secret = '4UVbsnbi4574iKkp47zTxNmjv2Ucejuf3L8DPeEq2kD9jXD9y6'access_token = '1634743334-WUPiUYq1uH9vEqm3gJ6dv3CmhXQNNPy5UjE5mJR'access_token_secret = 'ypsPOLZGnkhFypKVG4OyL0kljsHE1Bvn2f90iEuD65R7j'auth = tweepy.OAuthHandler(consumer_key, consumer_secret)auth.set_access_token(access_token, access_token_secret)api = tweepy.API(auth)#Step 2 - Prepare Tweets search#public_tweets = api.search('Trump')Hashtag_name = "TrumpKimSummit"#Date of the summit: June 12since_date = "2018-06-11"until_date = "2018-06-12"#Function of labelisation of analysisdef get_label(analysis, threshold = 0):	if analysis.sentiment[0] > threshold:		return 'Positive'	else:		return 'Negative'#Step 3 - Retrieve Tweetspolarity = []tweets_polarities = []#Get the tweetstweets = api.search(q = Hashtag_name, count = 100, since = since_date, until = until_date)#Step 4 - Perform sentiment analysis and Save the tweets in csvwith open('{}_tweets.csv'.format(Hashtag_name), 'wb') as tweets_file:	tweets_file.write('tweet, sentiment_label\n')	for tweet in tweets:		analysis = TextBlob(tweets.text)		#label according to the sentiment analysis		tweets_polarities.append(analysis.sentiment[0])		tweets_file.write('{},{}\n'.format(tweet.text.encode(utf8), get_label(analysis)))#Save the mean for final resultspolarity = np.mean(tweets_polarities)print(polarity)#CHALLENGE - Instead of printing out each tweet, save each Tweet to a CSV file and label each one either â€™positive' ot 'negative', depending on the sentiment #You can decide the sentiment polarity threshold yourself# for tweet in public_tweets:# 	print(tweet.text)# 	#Step 4 Perform Sentiment Analysis on Tweets# 	analysis = TextBlob(tweet.text)# 	print(analysis.sentiment)# 	print("")